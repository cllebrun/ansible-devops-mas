---

# Define the version of SLS will be installed
sls_catalog_source: "{{ lookup('env', 'SLS_CATALOG_SOURCE') | default('ibm-operator-catalog', true) }}"
sls_channel: "{{ lookup('env', 'SLS_CHANNEL') | default('3.x', true) }}"

# Define where SLS will be installed
sls_instance_name: "{{ lookup('env', 'SLS_INSTANCE_NAME') | default('sls', true) }}"
sls_namespace: "{{ lookup('env', 'SLS_NAMESPACE') | default('ibm-sls', true) }}"
sls_icr_cp: "{{ lookup('env', 'SLS_ICR_CP') | default('cp.icr.io/cp', true) }}"
sls_icr_cpopen: "{{ lookup('env', 'SLS_ICR_CPOPEN') | default('icr.io/cpopen', true) }}"

# IBM entitlement key for SLS
# Default to re-using the IBM entitlement key if we do not provide a specific one for SLS
sls_entitlement_username: "{{ lookup('env', 'SLS_ENTITLEMENT_USERNAME') | default('cp', true) }}"
ibm_entitlement_key: "{{ lookup('env', 'IBM_ENTITLEMENT_KEY') }}"
sls_entitlement_key: "{{ lookup('env', 'SLS_ENTITLEMENT_KEY') | default(ibm_entitlement_key, true) }}"

# SLS settings
sls_mongo_configdb: "admin"
sls_mongo_retrywrites: true

sls_domain: "{{ lookup('env', 'SLS_DOMAIN') }}"
sls_auth_enforce: "{{ lookup('env', 'SLS_AUTH_ENFORCE') | default('True', true) | bool }}"
sls_compliance_enforce: "{{ lookup('env', 'SLS_COMPLIANCE_ENFORCE') | default('True', true) | bool }}"
sls_registration_open: "{{ lookup('env', 'SLS_REGISTRATION_OPEN') | default('True', true) | bool }}"

sls_mongodb_cfg_file: "{{ lookup('env', 'SLS_MONGODB_CFG_FILE') }}"

# Bootstrap is used to initialize SLS, provide if you have an existing lic file and licenseId
bootstrap:
  license_id: "{{ lookup('env', 'SLS_LICENSE_ID') | default(\"\", true) }}"
  license_file: "{{ lookup('env', 'SLS_LICENSE_FILE') | default(\"\", true) }}"
  registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') | default(\"\", true) }}"

# SLSCfg generation
mas_instance_id: "{{ lookup('env', 'MAS_INSTANCE_ID') }}"
mas_config_dir: "{{ lookup('env', 'MAS_CONFIG_DIR') }}"

sls_url: "{{ lookup('env', 'SLS_URL') }}"
sls_registration_key: "{{ lookup('env', 'SLS_REGISTRATION_KEY') }}"
sls_tls_crt: "{{ lookup('env', 'SLS_TLS_CERT') }}"
sls_tls_crt_local_file_path: "{{ lookup('env', 'SLS_TLS_CERT_LOCAL_FILE_PATH') }}"
