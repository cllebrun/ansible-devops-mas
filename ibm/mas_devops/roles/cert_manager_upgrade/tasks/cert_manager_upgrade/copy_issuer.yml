---
# Issuers need to be moved to the new namespace, as do the secrets and certificates associated with them.

# vars:
# - source_issuer_name
# - source_issuer_secret_name

# 0. Lookup Issuer
- debug:
    msg:
      - "source_issuer_name: {{ internal_ca_issuer.name }}"
      - "source_issuer_secret_name: {{ cert_names.internal_ca }}"
      - "source_certificate_name: {{ cert_names.internal_ca }}"

- name: "Lookup Issuer : {{ source_issuer_name }}"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Issuer
    name: "{{ source_issuer_name }}"
    namespace: "{{ cert_manager_namespace }}"
  register: issuer_info

- name: "Lookup Issuer : {{ source_issuer_name }} : Assert that the issuer exists"
  assert:
    that:
      - issuer_info is defined
      - issuer_info.resources is defined
      - issuer_info.resources | length == 1
    fail_msg: "Unable to lookup issuer, the source Issuer ({{ source_issuer_name }}) does not exist: {{ issuer_info }}"

# 1. Copy Secret
- name: "Copy Issuer : {{ source_issuer_name }} : Copy Issuer's secret"
  when:
    - source_issuer_secret_name is defined
    - source_issuer_secret_name | length > 0 # i.e cert-manager-webhook-ibm-cis-self-signed-issuer don't have a secret to be copied
  include_tasks: tasks/cert_manager_upgrade/copy_secret.yml
  vars:
    secret_name: "{{ source_issuer_secret_name }}"

# 2. Lookup Certificate
- name: "Copy Issuer : {{ source_issuer_name }} : Lookup Certificate"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Certificate
    # name: "{{ source_issuer_secret_name }}" # changed here as it seems the certificate will have the issuer secret's name instead of the issuer's name
    name: "{{ source_certificate_name }}"
    namespace: "{{ cert_manager_namespace }}"
  register: source_issuer_cert_info

# 3. Copy Certificate
- name: "Copy Issuer : {{ source_issuer_name }} : Copy Certificate"
  when: source_issuer_cert_info['resources'] | length == 1
  vars:
    data: "{{ source_issuer_cert_info.resources[0] }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ common_services_namespace }}"
    definition: "{{ lookup('template', 'blankcr.yml.j2') | from_yaml }}"

# 4. Check if Certificate is in ready state
- name: "Copy Issuer : {{ source_issuer_name }} : Lookup copied Certificate"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Certificate
    # name: "{{ source_issuer_secret_name }}" # changed here as it seems the certificate will have the issuer secret's name instead of the issuer's name
    name: "{{ source_certificate_name }}"
    namespace: "{{ common_services_namespace }}"
  register: copied_issuer_cert_info
  until:
    - copied_issuer_cert_info.resources[0] is defined
    - copied_issuer_cert_info.resources[0] | length > 0
  retries: 10 # approx 10 minutes before we give up
  delay: 60 # 1 minute

# 5. Check if Certificate is in ready state
- name: "Copy Issuer : {{ source_issuer_name }} : Assert copied Certificate is in a healthy state"
  assert:
    that:
      - copied_issuer_cert_info.resources is defined
      - copied_issuer_cert_info.resources[0].status.conditions[0].message  == 'Certificate is up to date and has not expired'
      - copied_issuer_cert_info.resources[0].status.conditions[0].reason  == 'Ready'
      - copied_issuer_cert_info.resources[0].status.conditions[0].status == 'True'
    fail_msg: "Certificate '{{ source_issuer_secret_name }}' is in bad state! Reason: {{ copied_issuer_cert_info.resources[0].status.conditions[0].message }}"
    success_msg: "Certificate '{{ source_issuer_secret_name }}' is in healthy state! Reason: {{ copied_issuer_cert_info.resources[0].status.conditions[0].message }}"

# 6. Lookup Issuer
- name: "Copy Issuer : {{ source_issuer_name }} : Lookup Issuer"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Issuer
    name: "{{ source_issuer_name }}"
    namespace: "{{ cert_manager_namespace }}"
  register: source_issuer_info

# 7. Copy Issuer
- name: "Copy Issuer : {{ source_issuer_name }} : Copy Issuer"
  when: source_issuer_info['resources'] | length == 1
  vars:
    data: "{{ source_issuer_info.resources[0] }}"
  kubernetes.core.k8s:
    state: present
    namespace: "{{ common_services_namespace }}"
    definition: "{{ lookup('template', 'blankcr.yml.j2') | from_yaml }}"

# 8. Check if Issuer is in ready state
- name: "Copy Issuer : {{ source_issuer_name }} : Lookup copied Issuer"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Issuer
    name: "{{ source_issuer_name }}"
    namespace: "{{ common_services_namespace }}"
  register: copied_issuer_info
  until:
    - copied_issuer_info.resources[0] is defined
    - copied_issuer_info.resources[0] | length > 0
  retries: 10 # approx 10 minutes before we give up
  delay: 60 # 1 minute

- name: "Copy Issuer : {{ source_issuer_name }} : Assert copied Issuer is in a healthy state"
  assert:
    that:
      - copied_issuer_info.resources is defined
      # if issuer is selfsigned, then reason = 'isReady' however if that has a secret associated to it then reason == 'KeyPairVerified'
      - copied_issuer_info.resources[0].status.conditions[0].reason  == 'IsReady' or copied_issuer_info.resources[0].status.conditions[0].reason  == 'KeyPairVerified'
      - copied_issuer_info.resources[0].status.conditions[0].status == 'True'
    fail_msg: "Issuer '{{ source_issuer_name }}' is in bad state! Reason: {{ copied_issuer_info.resources[0].status.conditions[0].reason }} = {{ copied_issuer_info.resources[0].status.conditions[0].status }}"
    success_msg: "Issuer '{{ source_issuer_name }}' is in healthy state! Reason: {{ copied_issuer_info.resources[0].status.conditions[0].reason }} = {{ copied_issuer_info.resources[0].status.conditions[0].status }}"
