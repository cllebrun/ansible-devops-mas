---
# ClusterIssuers don't need to be moved, but we do need to copy it's CA secret into
# the new namespace because the CA secret must reside in the namespace where the
# cert-manager operator is installed.
# If ClusterIssuer was set for Let's Encrypt then we don't copy CA secret

- name: "Copy ClusterIssuer : {{ source_cluster_issuer_name }} : Lookup ClusterIssuer"
  kubernetes.core.k8s_info:
    api_version: v1
    kind: ClusterIssuer
    name: "{{ source_cluster_issuer_name }}"
  register: cluster_issuer_info

- name: "Copy ClusterIssuer : {{ source_cluster_issuer_name }} : Assert that the ClusterIssuer exists"
  assert:
    that:
      - cluster_issuer_info.resources is defined
      - cluster_issuer_info.resources | length == 1
      # if the user didn't provide their own ClusterIssuer then 'spec.ca.secretName' should be present in clusterIssuer resource
      # however if custom cluster issuer is set for let's encrypt, then it should have 'spec.acme'
      - cluster_issuer_info.resources[0].spec.ca.secretName is defined or cluster_issuer_info.resources[0].spec.acme is defined
    fail_msg: "Unable to copy secret, the source ClusterIssuer does not exist: {{ cluster_issuer_info }}"

- name: "Copy ClusterIssuer : {{ source_cluster_issuer_name }} : Copy ClusterIssuer's Secret"
  # just copy the secret when there's a secret to be copied, if it's let's encrypt, no 'spec.ca,secretName' will be present
  when: cluster_issuer_info.resources[0].spec.ca.secretName is defined
  include_tasks: tasks/cert_manager_upgrade/copy_secret.yml
  vars:
    secret_name: "{{ cluster_issuer_info.resources[0].spec.ca.secretName }}"
