---

# Provide intelligent storage class selection to minimize required user knowledge

# 1. Lookup storage class availabiity
# -----------------------------------------------------------------------------
- name: "Load default storage class information"
  include_vars: "{{ role_path }}/../../common_vars/default_storage_classes.yml"

- name: Lookup storage classes
  kubernetes.core.k8s_info:
    api_version: storage.k8s.io/v1
    kind: StorageClass
  register: lookup_storageclasses

- name: "Debug available storage classes"
  debug:
    msg: "{{ lookup_storageclasses | ibm.mas_devops.getResourceNames }}"


# 2. Data Storage (Required)
# -----------------------------------------------------------------------------
- name: Default Data Storage for ROKS if not set by user (ReadWriteOnce)
  when: db2_data_storage_class is not defined or db2_data_storage_class == ""
  vars:
  set_fact:
    db2_data_storage_class: "{{ lookup_storageclasses | ibm.mas_devops.defaultStorageClass(default_storage_classes_rwo) }}"

- name: Assert that a data storage class has been defined
  assert:
    that: db2_data_storage_class is defined and db2_data_storage_class != ""
    fail_msg: "db2_data_storage_class must be defined"


# 3. Meta Storage (Required)
# -----------------------------------------------------------------------------
- name: Default Meta Storage for ROKS if not set by user (ReadWriteMany)
  when: db2_meta_storage_class is not defined or db2_meta_storage_class == ""
  set_fact:
    db2_meta_storage_class: "{{ lookup_storageclasses | ibm.mas_devops.defaultStorageClass(default_storage_classes_rwx) }}"

- name: Assert that a meta storage class has been defined
  assert:
    that: db2_meta_storage_class is defined and db2_meta_storage_class != ""
    fail_msg: "db2_meta_storage_class must be defined"


# 4. Logs Storage (Optional)
# -----------------------------------------------------------------------------
- name: Default Logs Storage for ROKS if not set by user (ReadWriteOnce)
  when: db2_logs_storage_class is not defined or db2_logs_storage_class == ""
  set_fact:
    db2_logs_storage_class: "{{ lookup_storageclasses | ibm.mas_devops.defaultStorageClass(default_storage_classes_rwo) }}"


# 5. Backup Storage (Optional)
# -----------------------------------------------------------------------------
- name: Default Backup Storage for ROKS if not set by user (ReadWriteMany)
  when: db2_backup_storage_class is not defined or db2_backup_storage_class == ""
  set_fact:
    db2_backup_storage_class: "{{ lookup_storageclasses | ibm.mas_devops.defaultStorageClass(default_storage_classes_rwx_nogid) }}"


# 6. Temp Storage (Optional)
# -----------------------------------------------------------------------------
- name: Default Temp Storage for ROKS if not set by user (ReadWriteOnce)
  when: db2_temp_storage_class is not defined or db2_temp_storage_class == ""
  set_fact:
    db2_temp_storage_class: "{{ lookup_storageclasses | ibm.mas_devops.defaultStorageClass(default_storage_classes_rwo) }}"


# 7. Debug storage class configuration
# -----------------------------------------------------------------------------
- name: "Debug DB2U storage class configuration"
  debug:
    msg:
      - "Storage class (meta) ......... {{ db2_meta_storage_class }}"
      - "Storage class (data) ......... {{ db2_data_storage_class }}"
      - "Storage class (backup) ....... {{ db2_backup_storage_class }}"
      - "Storage class (logs) ......... {{ db2_logs_storage_class }}"
      - "Storage class (temp) ......... {{ db2_temp_storage_class }}"
