---
# This task will lookup for all existing db2wh instances
# and patch them to use latest version compatible with cpd v4.0

# 1. Lookup for specific upgraded db2wh version to patch the db2wh instances
# this is based on the db2wh service version that was upgraded earlier
# --------------------------------------------------------------------------------------------------
- name: Lookup for latest db2wh version to patch the existing db2wh instances
  kubernetes.core.k8s_info:
    api_version: "{{ hostvars[inventory_hostname].db2wh.apiVersion }}"
    kind: "{{ hostvars[inventory_hostname].db2wh.crdkind }}"
    name: "{{ hostvars[inventory_hostname].db2wh.crname }}"
    namespace: "{{ cpd_services_namespace }}"
  register: db2wh_cr

- set_fact:
    db2wh_upgrade_version: "{{ db2wh_cr.resources[0].status.versionBuild | regex_search(db2wh_regex) }}"
  vars:
    db2wh_regex: '(?<=\+)(.*?)(?=\+)'
  when:
    - db2wh_cr.resources is defined
    - db2wh_cr.resources | length > 0

- name: "Debug information"
  debug:
    msg:
      - "CPD services namespace .......... {{ cpd_services_namespace }}"
      - "DB2 version to be upgraded....... {{ db2wh_upgrade_version }}"

# 2. Lookup 'norootsquash' DaemonSet is deployed
# --------------------------------------------------------------------------------------------------
- name: "Check if 'norootsquash' DaemonSet is deployed"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    name: norootsquash
    namespace: kube-system
    kind: DaemonSet
  register: daemonset_output

# - debug:
#     msg: "{{ daemonset_output }}"

- name: "Create 'norootsquash' DaemonSet"
  when: daemonset_output.resources | length == 0
  include_tasks: tasks/cpd_upgrade/db2wh/setup_norootsquash.yml

# 3. Lookup existing db2wh instances
# --------------------------------------------------------------------------------------------------
- name: "Lookup existing db2wh instances"
  kubernetes.core.k8s_info:
    api_version: db2u.databases.ibm.com/v1
    namespace: "{{ cpd_services_namespace }}"
    kind: Db2uCluster
  register: db2ucluster_result

# 4. Patch existing db2wh instances to the newer version
# https://www.ibm.com/docs/en/cloud-paks/cp-data/4.0?topic=warehouse-upgrading-db2-from-version-35
# --------------------------------------------------------------------------------------------------
- name: "Patch existing db2wh instances to {{ db2wh_upgrade_version }} version compatible with CPD v4"
  shell: oc patch db2ucluster -n {{ cpd_services_namespace }} {{ outer_item.metadata.name }} --type=merge -p '{"spec":{"version":"{{ db2wh_upgrade_version }}"}}'
  loop: "{{ db2ucluster_result.resources }}"
  loop_control:
    loop_var: outer_item
    label: "Db2uCluster {{ outer_item.metadata.name }} patched to version {{ db2wh_upgrade_version }}"
  register: db2wh_patch_output

- debug:
    msg: "{{ db2wh_cmd.stdout_lines }}"
  loop: "{{ db2wh_patch_output.results }}"
  loop_control:
    loop_var: db2wh_cmd
    label: ""

- name: "Wait for DB2 Instances to be upgraded to {{ db2wh_upgrade_version }} version (CPD v4 compatible)"
  include_tasks: tasks/cpd_upgrade/db2wh/wait_for_db2wh_instances_upgrade.yml

# 5. When db2wh instances are done upgrading, need to reapply its ssl certs into MAS configs
# --------------------------------------------------------------------------------------------------
- name: "Reapply new DB2 Instances ca.crt's into MAS jdbc configs"
  include_tasks: tasks/cpd_upgrade/db2wh/apply_new_ssl_across_mas.yml
