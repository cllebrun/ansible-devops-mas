---

# 1. Provide Debug information
# -----------------------------------------------------------------------------
- name: "Debug information"
  debug:
    msg:
      - "NFD Namespace ...................... {{ nfd_namespace }}"
      - "NFD Channel   ...................... {{ nfd_channel }}"


# 2. Create NFD project
# -----------------------------------------------------------------------------
- name: "Create nfd namespace"
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: '{{ nfd_namespace }}'


# 3. Create NFD operator group and subscription
# -----------------------------------------------------------------------------
- name: "Create nfd operator group"
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'templates/nfd-operatorgroup.yml.j2') }}"
    wait: yes
    wait_timeout: 60 #subsequent tasks will fail if the CRD isn't fully created

- name: "Create nfd subscription"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/nfd-subscription.yml.j2') }}"
    wait: yes
    wait_timeout: 300
    wait_condition:
      type: 'CatalogSourcesUnhealthy'
      status: "False"

- name: "Wait until NodeFeatureDiscoveries CRD is available"
  kubernetes.core.k8s_info:
    api_version: apiextensions.k8s.io/v1
    name: "nodefeaturediscoveries.nfd.openshift.io"
    kind: CustomResourceDefinition
    wait: yes
    wait_sleep: 10
    wait_timeout: 300 # 5 mins until we give up waiting for the CRD to get into the expected state
    wait_condition:
      type: NamesAccepted
      status: "True"
  register: nfd_crd_info
  retries: 120 # ~approx 5 minutes before we give up waiting for the CRD to be created
  delay: 5 # seconds
  until:
    - nfd_crd_info.resources is defined
    - nfd_crd_info.resources | length > 0


# 4. Create NFD instance
# -----------------------------------------------------------------------------
- name: "Create NodeFeatureDiscovery instance"
  kubernetes.core.k8s:
    apply: yes
    definition: "{{ lookup('template', 'templates/nfd-instance.yml.j2') }}"


# 5. Make sure NFD daemonsets have been created and all pods are ready
# -----------------------------------------------------------------------------
- name: "Wait for 'nfd-master' DaemonSet pods to be ready"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    name: nfd-master
    namespace: "{{nfd_namespace}}"
    kind: DaemonSet
  register: nfd_master_daemonset
  until:
    - nfd_master_daemonset.resources is defined
    - nfd_master_daemonset.resources | length > 0
    - nfd_master_daemonset.resources[0].status.numberReady > 0
    - nfd_master_daemonset.resources[0].status.numberReady == nfd_master_daemonset.resources[0].status.desiredNumberScheduled
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute

- name: "Wait for 'nfd-worker' DaemonSet pods to be ready"
  kubernetes.core.k8s_info:
    api_version: apps/v1
    name: nfd-worker
    namespace: "{{nfd_namespace}}"
    kind: DaemonSet
  register: nfd_worker_daemonset
  until:
    - nfd_worker_daemonset.resources is defined
    - nfd_worker_daemonset.resources | length > 0
    - nfd_worker_daemonset.resources[0].status.numberReady > 0
    - nfd_worker_daemonset.resources[0].status.numberReady == nfd_worker_daemonset.resources[0].status.desiredNumberScheduled
  retries: 30 # approx 30 minutes before we give up
  delay: 60 # 1 minute
